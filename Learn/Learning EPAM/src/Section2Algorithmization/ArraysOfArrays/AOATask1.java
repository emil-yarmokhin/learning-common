package Section2Algorithmization.ArraysOfArrays;
//1. Дана матрица. Вывести на экран все нечетные столбцы, у которых первый элемент больше последнего.
public class AOATask1 {
    public static void main(String[] args) {
        int[][] matrix = {{77, 54, 16, 64, 35},
                          {48, 55, 16, 8,  11},
                          {7,  90, 9,  10, 25},
                          {90, 23, 34, 61, 15},
                          {12, 14, 54, 86, 95}};
        System.out.println("Исходная матрица:");
        for (int[] ints : matrix) {//внешний цикл, проходит по строкам
            for (int anInt : ints) {//внутренний цикл, по каждому из элементов в этой строке
                System.out.format("%02d ", anInt);//здесь и ниже форматировал вывод чисел, чтобы изящно было
            }
            System.out.println();
        }
        System.out.println("Выведены все нечётные столбцы, у которых первый элемент больше последнего:");
        for (int[] ints : matrix) {
            for (int j = 0; j < ints.length; j++) {//можно и j=1;..j+=2, но для того, чтобы столбцы симметрично
                //выводились снизу исходной таблицы, я оставил так. Иначе, нужный столбец выводится не там, где надо
                if ((j % 2 != 0) && (matrix[0][j] > matrix[matrix.length - 1][j])) {
                    System.out.format("%02d ", ints[j]);
                } else {
                    System.out.print("•• ");//
                }
            }
            System.out.println();//после выполнения первым элементом внешнего массива над
            //всеми элементами внутреннего массива - перенос строки
        }
    }
}